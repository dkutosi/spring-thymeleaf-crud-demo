import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.luve2code.springboot.thymleafdemo.entity.Employee;
import com.luve2code.springboot.thymleafdemo.service.EmployeeService;

@Controller
@RequestMapping("/employees")
public class EmployeeController {
	
	private EmployeeService employeeService;
	
	@Autowired
	public EmployeeController(EmployeeService employeeService) {
		this.employeeService = employeeService;
	}



	@GetMapping("/")
	public String Hello() {
		
		return "helloword";
	}
	
	//add mapping for "/list"
	
	@GetMapping("/list")
	public String listEmployees(Model theModel) {
		
		List<Employee> theEmployees = employeeService.findAll();
		
		//add to spring model
		theModel.addAttribute("employees", theEmployees);
		
		return "employees/list-employees";
	}
	
	@GetMapping("/showFormForUpdate")
	public String showFormForUpdate(@RequestParam("employeeId") int theId, Model theModel) {
		
		//get the employee from the service
		Employee theEmployee = employeeService.findById(theId);
		
		//set employee as a model attribute to pre-populate form
		theModel.addAttribute("employee", theEmployee);
		
		//send over to form
		return "employees/employee-form";
	}
	
	@GetMapping("/showFormForAdd")
	public String showFormForAdd(Model theModel) {
	
		// model attribute to bind form data
		Employee theEmployee = new Employee(0, null, null, null);
		
		theModel.addAttribute("employee", theEmployee);
		
		return "employees/employee-form";
	}
	
	@GetMapping("/delete")
	public String delete(@RequestParam("employeeId") int theId) {
	
		if(!(theId == 0)) {
			//delete the employee
			employeeService.deleteById(theId);
		}
		
		//redirect to the /employees/list
		return "redirect:/employees/list";
	}
	
	@PostMapping("/save")
	public String save(@ModelAttribute("employee") Employee theEmployee) {
		
		//save employee
		employeeService.save(theEmployee);
		
		//use redirect to prevent duplicate submissiosons
		return "redirect:/employees/list";
		
	}
	

}
